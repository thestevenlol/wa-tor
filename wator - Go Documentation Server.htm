<!DOCTYPE html>
<html><head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<meta name="theme-color" content="#375EAB">

  <title>wator - Go Documentation Server</title>

<link type="text/css" rel="stylesheet" href="wator%20-%20Go%20Documentation%20Server_files/style.css">

<script>window.initFuncs = [];</script>
<script src="wator%20-%20Go%20Documentation%20Server_files/jquery.js" defer="defer"></script>



<script>var goVersion = "go1.18.1";</script>
<script src="wator%20-%20Go%20Documentation%20Server_files/godocs.js" defer="defer"></script>
</head>
<body>

<div id="lowframe" style="position: fixed; bottom: 0; left: 0; height: 0; width: 100%; border-top: thin solid grey; background-color: white; overflow: auto;">
...
</div><!-- #lowframe -->

<div id="topbar" class="wide"><div class="container">
<div class="top-heading" id="heading-wide"><a href="http://localhost:6060/pkg/">Go Documentation Server</a></div>
<div class="top-heading" id="heading-narrow"><a href="http://localhost:6060/pkg/">GoDoc</a></div>
<a href="#" id="menu-button"><span id="menu-button-arrow">▽</span></a>
<form method="GET" action="/search">
<div id="menu" style="min-width: 60px;">

<span class="search-box"><input type="search" id="search" name="q" placeholder="Search" aria-label="Search" required=""><button type="submit"><span><!-- magnifying glass: --><svg width="24" height="24" viewBox="0 0 24 24"><title>submit search</title><path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg></span></button></span>
</div>
</form>

</div></div>



<div id="page" class="wide" style="outline: 0px;" tabindex="-1">
<div class="container">


  <h1>
    Package wator
    <span class="text-muted"></span>
  </h1>







<div id="nav"></div>


<!--
	Copyright 2009 The Go Authors. All rights reserved.
	Use of this source code is governed by a BSD-style
	license that can be found in the LICENSE file.
-->
<!--
	Note: Static (i.e., not template-generated) href and id
	attributes start with "pkg-" to make it impossible for
	them to conflict with generated attributes (some of which
	correspond to Go identifiers).
-->

	<script>
	document.ANALYSIS_DATA = null;
	document.CALLGRAPH = null;
	</script>

	
		
		<div id="short-nav">
			<dl>
			<dd><code>import "jackf/wator"</code></dd>
			</dl>
			<dl>
			<dd><a href="#pkg-overview" class="overviewLink">Overview</a></dd>
			<dd><a href="#pkg-index" class="indexLink">Index</a></dd>
			
			
			</dl>
		</div>
		<!-- The package's Name is printed as title by the top-level template -->
		<div id="pkg-overview" class="toggleVisible">
			<div class="collapsed">
				<h2 class="toggleButton" title="Click to show Overview section">Overview ▹</h2>
			</div>
			<div class="expanded">
				<h2 class="toggleButton" title="Click to hide Overview section">Overview ▾</h2>
				
				
			</div>
		</div>

		<div id="pkg-index" class="toggleVisible">
		<div class="collapsed">
			<h2 class="toggleButton" title="Click to show Index section">Index ▹</h2>
		</div>
		<div class="expanded">
			<h2 class="toggleButton" title="Click to hide Index section">Index ▾</h2>

		<!-- Table of contents for API; must be named manual-nav to turn off auto nav. -->
			<div id="manual-nav">
			<dl>
			
				<dd><a href="#pkg-constants">Constants</a></dd>
			
			
			
				
				<dd><a href="#GetThreadRowHeights">func GetThreadRowHeights() []int</a></dd>
			
				
				<dd><a href="#Shuffle">func Shuffle(slice [][2]int)</a></dd>
			
				
				<dd><a href="#WriteTPS">func WriteTPS()</a></dd>
			
			
				
				<dd><a href="#Cell">type Cell</a></dd>
				
				
			
				
				<dd><a href="#Game">type Game</a></dd>
				
				
					
					<dd>&nbsp; &nbsp; <a href="#Game.Draw">func (g *Game) Draw(screen *ebiten.Image)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#Game.GetAdjacent">func (g *Game) GetAdjacent(x, y int) [][2]int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#Game.Initialise">func (g *Game) Initialise()</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#Game.Layout">func (g *Game) Layout(outsideWidth, outsideHeight int) (int, int)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#Game.Update">func (g *Game) Update() error</a></dd>
				
			
				
				<dd><a href="#ThreadBounds">type ThreadBounds</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#GetThreadYBounds">func GetThreadYBounds() []ThreadBounds</a></dd>
				
				
			
				
				<dd><a href="#ThreadGrid">type ThreadGrid</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#NewThreadGrid">func NewThreadGrid(bounds ThreadBounds) *ThreadGrid</a></dd>
				
				
			
			
			</dl>
			</div><!-- #manual-nav -->

		

		
			<h3>Package files</h3>
			<p>
			<span style="font-size:90%">
			
				<a href="http://localhost:6060/src/jackf/wator/main.go">main.go</a>
			
			</span>
			</p>
		
		</div><!-- .expanded -->
		</div><!-- #pkg-index -->

		

		
			<h2 id="pkg-constants">Constants <a class="permalink" href="#pkg-constants">¶</a></h2>
			
				<p>
Cell types
</p>

				<pre>const (
    <span id="Empty">Empty</span> <a href="http://localhost:6060/pkg/builtin/#int32">int32</a> = 0
    <span id="Fish">Fish</span>  <a href="http://localhost:6060/pkg/builtin/#int32">int32</a> = 1
    <span id="Shark">Shark</span> <a href="http://localhost:6060/pkg/builtin/#int32">int32</a> = 2
)</pre>
			
		
		
		
			
			
			<h2 id="GetThreadRowHeights">func <a href="http://localhost:6060/src/jackf/wator/main.go?s=10061:10093#L413">GetThreadRowHeights</a>
				<a class="permalink" href="#GetThreadRowHeights">¶</a>
				
				
			</h2>
			<pre>func GetThreadRowHeights() []<a href="http://localhost:6060/pkg/builtin/#int">int</a></pre>
			<p>
GetThreadRowHeights function
Parameters: None
Returns: []int
Description: Returns the heights of each thread
</p>

			
			

		
			
			
			<h2 id="Shuffle">func <a href="http://localhost:6060/src/jackf/wator/main.go?s=3530:3558#L148">Shuffle</a>
				<a class="permalink" href="#Shuffle">¶</a>
				
				
			</h2>
			<pre>func Shuffle(slice [][2]<a href="http://localhost:6060/pkg/builtin/#int">int</a>)</pre>
			<p>
Shuffle function
Parameters: slice
Returns: None
Description: Shuffles the slice in place
</p>

			
			

		
			
			
			<h2 id="WriteTPS">func <a href="http://localhost:6060/src/jackf/wator/main.go?s=9333:9348#L381">WriteTPS</a>
				<a class="permalink" href="#WriteTPS">¶</a>
				
				
			</h2>
			<pre>func WriteTPS()</pre>
			<p>
WriteTPS function
Parameters: None
Returns: None
Description: Writes the current TPS to a CSV file
</p>

			
			

		
		
			
			
			<h2 id="Cell">type <a href="http://localhost:6060/src/jackf/wator/main.go?s=1310:1439#L57">Cell</a>
				<a class="permalink" href="#Cell">¶</a>
				
				
			</h2>
			<p>
Cell struct
Parameters: Type, BreedTime, StarveTime
Returns: None
Description: Cell struct to represent a cell in the grid
</p>

			<pre>type Cell struct {
<span id="Cell.Type"></span>    Type       <a href="http://localhost:6060/pkg/builtin/#int32">int32</a> <span class="comment">// Regular int32, we'll use atomic operations to access it</span>
<span id="Cell.BreedTime"></span>    BreedTime  <a href="http://localhost:6060/pkg/builtin/#int">int</a>
<span id="Cell.StarveTime"></span>    StarveTime <a href="http://localhost:6060/pkg/builtin/#int">int</a>
}
</pre>

			

			

			
			
			

			

			
		
			
			
			<h2 id="Game">type <a href="http://localhost:6060/src/jackf/wator/main.go?s=1543:1594#L67">Game</a>
				<a class="permalink" href="#Game">¶</a>
				
				
			</h2>
			<p>
Game struct
Parameters: grid
Returns: None
Description: Game struct to represent the game
</p>

			<pre>type Game struct {
    <span class="comment">// contains filtered or unexported fields</span>
}
</pre>

			

			

			
			
			

			

			
				
				<h3 id="Game.Draw">func (*Game) <a href="http://localhost:6060/src/jackf/wator/main.go?s=8422:8463#L341">Draw</a>
					<a class="permalink" href="#Game.Draw">¶</a>
					
					
				</h3>
				<pre>func (g *<a href="#Game">Game</a>) Draw(screen *ebiten.<a href="#Image">Image</a>)</pre>
				<p>
Draw function
Parameters: screen
Returns: None
Description: Draws the game state to the screen
</p>

				
				
				
			
				
				<h3 id="Game.GetAdjacent">func (*Game) <a href="http://localhost:6060/src/jackf/wator/main.go?s=3009:3054#L125">GetAdjacent</a>
					<a class="permalink" href="#Game.GetAdjacent">¶</a>
					
					
				</h3>
				<pre>func (g *<a href="#Game">Game</a>) GetAdjacent(x, y <a href="http://localhost:6060/pkg/builtin/#int">int</a>) [][2]<a href="http://localhost:6060/pkg/builtin/#int">int</a></pre>
				<p>
GetAdjacent function
Parameters: x, y
Returns: [][2]int
Description: Returns the adjacent cells to the given cell
</p>

				
				
				
			
				
				<h3 id="Game.Initialise">func (*Game) <a href="http://localhost:6060/src/jackf/wator/main.go?s=2425:2452#L100">Initialise</a>
					<a class="permalink" href="#Game.Initialise">¶</a>
					
					
				</h3>
				<pre>func (g *<a href="#Game">Game</a>) Initialise()</pre>
				<p>
Initialise function
Parameters: None
Returns: None
Description: Initialises the game grid by randomly placing fish and sharks
</p>

				
				
				
			
				
				<h3 id="Game.Layout">func (*Game) <a href="http://localhost:6060/src/jackf/wator/main.go?s=9117:9182#L373">Layout</a>
					<a class="permalink" href="#Game.Layout">¶</a>
					
					
				</h3>
				<pre>func (g *<a href="#Game">Game</a>) Layout(outsideWidth, outsideHeight <a href="http://localhost:6060/pkg/builtin/#int">int</a>) (<a href="http://localhost:6060/pkg/builtin/#int">int</a>, <a href="http://localhost:6060/pkg/builtin/#int">int</a>)</pre>
				<p>
Layout function
Parameters: outsideWidth, outsideHeight
Returns: int, int
Description: Returns the screen width and height
</p>

				
				
				
			
				
				<h3 id="Game.Update">func (*Game) <a href="http://localhost:6060/src/jackf/wator/main.go?s=7578:7607#L299">Update</a>
					<a class="permalink" href="#Game.Update">¶</a>
					
					
				</h3>
				<pre>func (g *<a href="#Game">Game</a>) Update() <a href="http://localhost:6060/pkg/builtin/#error">error</a></pre>
				<p>
Update function
Parameters: None
Returns: error
Description: Updates the game state
</p>

				
				
				
			
		
			
			
			<h2 id="ThreadBounds">type <a href="http://localhost:6060/src/jackf/wator/main.go?s=879:927#L39">ThreadBounds</a>
				<a class="permalink" href="#ThreadBounds">¶</a>
				
				
			</h2>
			<p>
ThreadBounds struct
Parameters: MinY, MaxY
Returns: None
Description: ThreadBounds struct to represent the bounds of a thread
</p>

			<pre>type ThreadBounds struct {
<span id="ThreadBounds.MinY"></span>    MinY <a href="http://localhost:6060/pkg/builtin/#int">int</a>
<span id="ThreadBounds.MaxY"></span>    MaxY <a href="http://localhost:6060/pkg/builtin/#int">int</a>
}
</pre>

			

			

			
			
			

			
				
				<h3 id="GetThreadYBounds">func <a href="http://localhost:6060/src/jackf/wator/main.go?s=10567:10605#L436">GetThreadYBounds</a>
					<a class="permalink" href="#GetThreadYBounds">¶</a>
					
					
				</h3>
				<pre>func GetThreadYBounds() []<a href="#ThreadBounds">ThreadBounds</a></pre>
				<p>
GetThreadYBounds function
Parameters: None
Returns: []ThreadBounds
Description: Returns the bounds of each thread
</p>

				
				
			

			
		
			
			
			<h2 id="ThreadGrid">type <a href="http://localhost:6060/src/jackf/wator/main.go?s=1072:1173#L48">ThreadGrid</a>
				<a class="permalink" href="#ThreadGrid">¶</a>
				
				
			</h2>
			<p>
ThreadGrid struct
Parameters: minY, maxY, isBoundary
Returns: None
Description: ThreadGrid struct to represent a grid for a thread
</p>

			<pre>type ThreadGrid struct {
    <span class="comment">// contains filtered or unexported fields</span>
}
</pre>

			

			

			
			
			

			
				
				<h3 id="NewThreadGrid">func <a href="http://localhost:6060/src/jackf/wator/main.go?s=1731:1782#L75">NewThreadGrid</a>
					<a class="permalink" href="#NewThreadGrid">¶</a>
					
					
				</h3>
				<pre>func NewThreadGrid(bounds <a href="#ThreadBounds">ThreadBounds</a>) *<a href="#ThreadGrid">ThreadGrid</a></pre>
				<p>
NewThreadGrid function
Parameters: bounds
Returns: *ThreadGrid
Description: Returns a new ThreadGrid with the given bounds
</p>

				
				
			

			
		
	

	







<div id="footer">
Build version go1.18.1.<br>
Except as <a href="https://developers.google.com/site-policies#restrictions">noted</a>,
the content of this page is licensed under the
Creative Commons Attribution 3.0 License,
and code is licensed under a <a href="http://localhost:6060/LICENSE">BSD license</a>.<br>
<a href="https://golang.org/doc/tos.html">Terms of Service</a> |
<a href="https://www.google.com/intl/en/policies/privacy/">Privacy Policy</a>
</div>

</div><!-- .container -->
</div><!-- #page -->


</body></html>